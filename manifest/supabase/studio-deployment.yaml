apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: studio
  name: studio
  namespace: currently-working-on-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: studio
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/supabase-default: "true"
        io.kompose.service: studio
    spec:
      containers:
        - env:
            - name: AUTH_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: supabase-secret
                  key: JWT_SECRET
            - name: DEFAULT_ORGANIZATION_NAME
              valueFrom:
                configMapKeyRef:
                  name: supabase-config-map
                  key: STUDIO_DEFAULT_ORGANIZATION
            - name: DEFAULT_PROJECT_NAME
              valueFrom:
                configMapKeyRef:
                  name: supabase-config-map
                  key: STUDIO_DEFAULT_PROJECT
            - name: LOGFLARE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: supabase-secret
                  key: LOGFLARE_API_KEY
            - name: LOGFLARE_URL
              value: http://analytics:4000
            - name: NEXT_ANALYTICS_BACKEND_PROVIDER
              value: postgres
            - name: NEXT_PUBLIC_ENABLE_LOGS
              value: "true"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: supabase-secret
                  key: POSTGRES_PASSWORD
            - name: STUDIO_PG_META_URL
              value: http://meta:8080
            - name: SUPABASE_ANON_KEY
              valueFrom:
                secretKeyRef:
                  name: supabase-secret
                  key: ANON_KEY
            - name: SUPABASE_PUBLIC_URL
              valueFrom:
                configMapKeyRef:
                  name: supabase-config-map
                  key: SUPABASE_PUBLIC_URL
            - name: SUPABASE_SERVICE_KEY
              valueFrom:
                secretKeyRef:
                  name: supabase-secret
                  key: SERVICE_ROLE_KEY
            - name: SUPABASE_URL
              value: http://kong:8000
          image: supabase/studio:20240729-ce42139
          livenessProbe:
            exec:
              command:
                - node
                - -e
                - require('http').get('http://localhost:3000/api/profile', (r) => {if (r.statusCode !== 200) throw new Error(r.statusCode)})
            failureThreshold: 3
            periodSeconds: 5
            timeoutSeconds: 5
          name: supabase-studio
          resources: {}
      restartPolicy: Always
status: {}
