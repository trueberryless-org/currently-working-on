apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: kong
  name: kong
  namespace: currently-working-on-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kong
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/supabase-default: "true"
        io.kompose.service: kong
    spec:
      containers:
        - command:
            - bash
            - -c
            - eval "echo \"$(cat ~/temp.yml)\"" > ~/kong.yml && /docker-entrypoint.sh kong docker-start
          env:
            - name: DASHBOARD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: supabase-secret
                  key: DASHBOARD_PASSWORD
            - name: DASHBOARD_USERNAME
              valueFrom:
                secretKeyRef:
                  name: supabase-secret
                  key: DASHBOARD_USERNAME
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_DECLARATIVE_CONFIG
              value: /home/kong/kong.yml
            - name: KONG_DNS_ORDER
              value: LAST,A,CNAME
            - name: KONG_NGINX_PROXY_PROXY_BUFFERS
              value: 64 160k
            - name: KONG_NGINX_PROXY_PROXY_BUFFER_SIZE
              value: 160k
            - name: KONG_PLUGINS
              value: request-transformer,cors,key-auth,acl,basic-auth
            - name: SUPABASE_ANON_KEY
              valueFrom:
                secretKeyRef:
                  name: supabase-secret
                  key: ANON_KEY
            - name: SUPABASE_SERVICE_KEY
              valueFrom:
                secretKeyRef:
                  name: supabase-secret
                  key: SERVICE_ROLE_KEY
          image: kong:2.8.1
          name: supabase-kong
          ports:
            - containerPort: 8000
              hostPort: 8000
              protocol: TCP
            - containerPort: 8443
              hostPort: 8443
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /home/kong/temp.yml
              name: kong-claim0
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: kong-claim0
          persistentVolumeClaim:
            claimName: kong-claim0
            readOnly: true
status: {}
